// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ---------- //
// picopet_sp //
// ---------- //

#define picopet_sp_wrap_target 3
#define picopet_sp_wrap 9

static const uint16_t picopet_sp_program_instructions[] = {
    0x80a0, //  0: pull   block           side 0     
    0x6020, //  1: out    x, 32           side 0     
    0x2090, //  2: wait   1 gpio, 16      side 0     
            //     .wrap_target
    0xb02b, //  3: mov    x, !null        side 1     
    0x1045, //  4: jmp    x--, 5          side 1     
    0x10c4, //  5: jmp    pin, 4          side 1     
    0x00c8, //  6: jmp    pin, 8          side 0     
    0x0046, //  7: jmp    x--, 6          side 0     
    0xb0c1, //  8: mov    isr, x          side 1     
    0x9000, //  9: push   noblock         side 1     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program picopet_sp_program = {
    .instructions = picopet_sp_program_instructions,
    .length = 10,
    .origin = -1,
};

static inline pio_sm_config picopet_sp_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + picopet_sp_wrap_target, offset + picopet_sp_wrap);
    sm_config_set_sideset(&c, 1, false, false);
    return c;
}

// this is a raw helper function for use by the user which sets up the GPIO output, and configures the SM to output on a particular pin
void picopet_sp_program_init(PIO pio, uint sm, uint offset, uint pin, uint led_pin) {
   pio_gpio_init(pio, led_pin);
   pio_sm_set_consecutive_pindirs(pio, sm, led_pin, 1, true);
   pio_sm_config c = picopet_sp_program_get_default_config(offset);
   sm_config_set_set_pins(&c, led_pin, 1);
   sm_config_set_sideset_pins(&c, led_pin);
   sm_config_set_sideset(&c, 1, false, false);
   sm_config_set_jmp_pin(&c, pin);
   pio_sm_init(pio, sm, offset, &c);
}

#endif

